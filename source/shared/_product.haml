%section.section-head
  .section-head-content
    %h2.shirkhand Product
    %i Pivotal Apps Manager
    .subtitle 2 years • Product Designer
%section.content
  %h2 Background
  %p Cloud Foundry is a platform built specifically to serve cloud-native application architectures. Essentially it takes the confusion out of deploying and maintaining applications at scale and allows developers to get back to the task of creating value for their company’s customers instead of tinkering with servers. This results in massive savings of time, energy, and money for our large enterprise customers.
  .default-type.mbxl
    %a{:href => "https://pivotal.io/platform", :target => "_blank"}
      .svgicon.svg-baseline
        =partial 'images/svg-lib/chevron_right.svg'
      Learn more about Pivotal Cloud Foundry (Enterprise level)
      .svgicon.svg-baseline
        =partial 'images/svg-lib/open_in_new.svg'
  %p Apps Manager is the visual interface that allows developers to view and interact with their applications running on Cloud Foundry.
  .default-type.mbl
    %a{:href => "http://run.pivotal.io/", :target => "_blank"}
      .svgicon.svg-baseline
        =partial 'images/svg-lib/chevron_right.svg'
      Explore Pivotal Web Services (Consumer facing)
      .svgicon.svg-baseline
        =partial 'images/svg-lib/open_in_new.svg'


  .img-wrap
    %a.no-link{:href => "images/portfolio/apps-manager-1.png", "data-featherlight" => "image"}
      %img.img-handler{:src => "images/portfolio/apps-manager-1.png"}
  %h2 My Role
  %p I am the product designer working on visuals, UI/UX, research, and product direction. However, I regularly pair in with my PM and engineers on the team to complete tasks and spread context on the product. Empathy for my teammate's roles and an understanding of their challenges makes me a more effective designer.
  %h2 Goals
  %ul
    %li Assist developers in quickly managing their applications so they can get back to writing code
    %li Take advantage of opportunities to visualize information for developers that cannot be done in the CLI (Command Line Interface)
    %li Make PCF the best place to run Spring (Java) applications
  %h2 Challenges
  %ul
    %li Large amount of tech debt coming into the team
    %li Visualize the runtime of Cloud Foundry that 20+ teams contribute to
    %li Extremely complex problem space to ramp into
    %li Limited analytics for success

  %h2 Outcomes
  %ul
    %li Improved interactions for speed, provide actions/information at appropriate times
    %li Only cloud platform to have first class Spring Boot integrations
    %li Removed UI to reduce confusion and show developers the information that matters at the right time

  .quote "I don't mean to curse, but this is bitchin!"
  .sub-quote Quote from usability session showcasing new Spring features
  %h2 Research, Understanding, and Prototyping
  %p I’m always looking to learn more about the kind of environments our users work in, the constraints placed on them, and what success looks like for them. A traditional persona doesn’t capture the complexity and wide range of our users so I created this ‘developer on the application lifecycle journey map’. This allows us to stay focused on what exactly we are solving and what value it is providing in the grand scheme. We are able to isolate a particular exploration/ideation initiative to a specific problem space.
  .img-wrap
    %a.no-link{:href => "images/portfolio/journey-map.png", "data-featherlight" => "image"}
      %img.img-handler{:src => "images/portfolio/journey-map.png"}
    .img-subtitle Developer on the application lifecycle journey
  %p We are constantly using a variety of discovery and framing techniques to get to the core of what developers (users) need to be successful. Whenever possible I try to take a balanced team approach by bringing the engineers and PM into parts of the research process and running alignment exercises like affinity mapping, design studios, and 2x2 prioritization. The shared understanding and ownership elevates the quality of the product and the health of the team.
  .img-wrap
    %a.no-link{:href => "images/portfolio/am-team-sort.jpg", "data-featherlight" => "image"}
      %img.img-handler{:src => "images/portfolio/am-team-sort.jpg"}
    .img-subtitle Synthesizing with engineers from the team after a round of interviews
  %p
    To validate my solutions I will often make HTML prototypes to test with users. Most users can’t tell the difference between my prototype and the real thing. This creates really high quality feedback that is directly applicable before engineering even starts. Below are two of my prototypes from different periods:
  .default-type.mbl
    %a{:href => "http://protoappsman.cfapps.io/org.html", :target => "_blank"}
      .svgicon.svg-baseline
        =partial 'images/svg-lib/chevron_right.svg'
      Proto Apps Manager at PCF 1.9
      .svgicon.svg-baseline
        =partial 'images/svg-lib/open_in_new.svg'
  .default-type.mbxl
    %a{:href => "http://protoappsman8pt.cfapps.io/space.html", :target => "_blank"}
      .svgicon.svg-baseline
        =partial 'images/svg-lib/chevron_right.svg'
      Proto Apps Manager at PCF 1.12 (after 8pt grid integration)
      .svgicon.svg-baseline
        =partial 'images/svg-lib/open_in_new.svg'
  %p Please note that there are plenty of dead end links. Only specific flows were buffed out for testing.
  .img-wrap
    %a.no-link{:href => "images/portfolio/apps-man-proto.png", "data-featherlight" => "image"}
      %img.img-handler{:src => "images/portfolio/apps-man-proto.png"}
    .img-subtitle Middleman static site generator deployed to PWS

  %h2 Collaboration and Tools
  %p
    When I pass off designs to engineers I try to minimize the need for red-lines. If the
    %a{:href => "#design-system"} design system
    is good enough they should only need a napkin sketch. However, not everything is captured in our design system and some flows require a little more fidelity. These are some of the skills/tools I use regularly:
  %ul
    %li Visuals in Sketch
    %li Simple prototypes in Invision
    %li Realistic HTML prototypes for interactions and animations
    %li Pair with engineers on front-end
    %li Pair with PM on story writing
  .grid.mbn
    .col.col-sm
      .img-wrap.mbn
        %a.no-link{:href => "images/portfolio/apps-man-wireframe.png", "data-featherlight" => "image"}
          %img.img-handler{:src => "images/portfolio/apps-man-wireframe.png"}
    .col
      .img-wrap.mbn
        %a.no-link{:href => "images/portfolio/apps-man-app.png", "data-featherlight" => "image"}
          %img.img-handler{:src => "images/portfolio/apps-man-app.png"}
  .grid.mbxl
    .col.col-sm
      .sub-quote Using the correct fidelity for the right feedback

  %h2 Key Learnings
  %ul
    %li Empathy for the role of engineering and PM on my team
    %li Collaboration methods - the appropriate process/experience for the problem space
    %li
      Accessibility standardization up to 508a compliance and how our
      %a{:href => "#design-system"} design system
      can help
    %li Deep understanding of the CF runtime and ability to work on API construction
    %li Understanding developers (users) and their complex needs
